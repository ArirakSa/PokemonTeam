import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get_storage/get_storage.dart';
import '../services/api_service.dart';

class TeamController extends GetxController {
  var pokemons =
      <Map<String, String>>[].obs; // ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏à‡∏≤‡∏Å API [{name, imageUrl}]

  var team = <Map<String, String>>[].obs; // ‡∏ó‡∏µ‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏ï‡∏±‡∏ß)

  var teamName = ''.obs; // ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°

  var searchQuery = ''.obs; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡∏à‡∏≤‡∏Å search bar)

  final storage = GetStorage(); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏≤‡∏ß‡∏£

  final ApiService api = Get.find(); // API service

  @override
  void onInit() {
    super.onInit();

    // ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å GetStorage
    final storedTeam = storage.read<List>('team') ?? [];
    team.value = storedTeam.map((e) => Map<String, String>.from(e)).toList();
    teamName.value = storage.read('teamName') ?? '';

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏á storage ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
    ever(team, (_) => storage.write('team', team.toList()));
    ever(teamName, (_) => storage.write('teamName', teamName));

    loadPokemons();
  }

  // ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏à‡∏≤‡∏Å API
  void loadPokemons() async {
    pokemons.value = await api.fetchPokemons(); // [{name, imageUrl}]
  }

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô
  void togglePokemon(String name) {
    final existing = team.firstWhereOrNull((p) => p["name"] == name);

    if (existing != null) {
      team.remove(existing); // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
    } else {
      if (team.length < 3) {
        // ‡∏´‡∏≤‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏à‡∏≤‡∏Å pokemons
        final poke = pokemons.firstWhereOrNull((p) => p["name"] == name);
        if (poke != null) {
          team.add({"name": poke["name"]!, "imageUrl": poke["imageUrl"]!});
        }
      } else {
        Get.snackbar(
          "‡∏ñ‡∏∂‡∏á‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î",
          "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3 ‡∏ï‡∏±‡∏ß",
          duration: const Duration(seconds: 2),
          backgroundColor: Colors.red.shade700, // üî¥ ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏°
          colorText: Colors.white, // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
          margin: const EdgeInsets.all(12),
          icon: const Icon(Icons.warning, color: Colors.yellow), // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß
        );
      }
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°
  void setTeamName(String name) {
    teamName.value = name;
    storage.write('teamName', name);
  }

  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏µ‡∏°
  void resetTeam() {
    team.clear();
    teamName.value = '';
    storage.remove('team');
    storage.remove('teamName');
  }
}
